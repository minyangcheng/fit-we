apply plugin: 'com.android.application'
android {
    compileSdkVersion 26

    defaultConfig {
        applicationId "com.fit.we.sample"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        flavorDimensions "versionCode"

        buildConfigField 'String', 'GIT_VERSION', "\"${getGitVersion()}\""
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        beta_in {
            buildConfigField 'String', 'fitWeServer', "\"${getIpAddress()}\""
        }
        beta_out {
            buildConfigField 'String', 'fitWeServer', '"http://dist.cheguo-cdn.com"'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.android.support:support-v4:26.1.0'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    testCompile 'junit:junit:4.12'
    compile project(':fit-we')
}

def getIpAddress() {
    InetAddress inetAddress=getLocalHostLANAddress();
    return 'http://'+inetAddress.getHostAddress()+":8888";
}

def getLocalHostLANAddress() {
    try {
        InetAddress candidateAddress = null;
        for (Enumeration ifaces = NetworkInterface.getNetworkInterfaces(); ifaces.hasMoreElements();) {
            NetworkInterface iface = (NetworkInterface) ifaces.nextElement();
            for (Enumeration inetAddrs = iface.getInetAddresses(); inetAddrs.hasMoreElements();) {
                InetAddress inetAddr = (InetAddress) inetAddrs.nextElement();
                if (!inetAddr.isLoopbackAddress()) {
                    if (inetAddr.isSiteLocalAddress()) {
                        return inetAddr;
                    } else if (candidateAddress == null) {
                        candidateAddress = inetAddr;
                    }
                }
            }
        }
        if (candidateAddress != null) {
            return candidateAddress;
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    return InetAddress.getLocalHost();
}

def getGitVersion() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}
